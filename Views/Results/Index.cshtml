@model List<INF4001N_1814748_NVSAAY001_2024.ViewModels.ResultsViewModel>

@{
    ViewBag.Title = "Election Results";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Prepare data as a serialized JSON object
    var serializedData = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
}

<a href="@Url.Action("Index", "Home")" class="back-button btn btn-primary">
    &larr; Back to Home
</a>

<h2 class="text-center results-title">Election Results</h2>

<div class="container mt-5">
    @foreach (var election in Model)
    {
        <div class="mb-5">
            <h3 class="text-center election-title">@election.ElectionTitle</h3>

            <div class="stats-container text-center mb-4">
                <p>
                    <strong>Total Votes Cast:</strong> @election.TotalVotes<br>
                    <strong>Percentage of Population Voted:</strong> @election.PopulationPercentageVoted.ToString("0.00")%<br>
                </p>
            </div>

            <table class="table table-striped table-hover table-bordered text-center">
                <thead class="table-header">
                    <tr>
                        <th>Candidate</th>
                        <th>Percentage of Votes</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < election.CandidateNames.Count; i++)
                    {
                        <tr>
                            <td>@election.CandidateNames[i]</td>
                            <td>@election.CandidateVotePercentages[i].ToString("0.00")%</td>
                        </tr>
                    }
                </tbody>
            </table>

            <canvas id="chart-@election.ElectionTitle.Replace(" ", "-")" class="results-chart"></canvas>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const electionsData = @Html.Raw(@serializedData);

        document.addEventListener("DOMContentLoaded", function () {
            electionsData.forEach(election => {
                const ctx = document.getElementById(`chart-${election.ElectionTitle.replace(/\s+/g, "-")}`).getContext("2d");

                const imageUrls = election.CandidatePhotos;
                const images = [];
                imageUrls.forEach((url) => {
                    const img = new Image();
                    img.src = url;
                    images.push(img);
                });

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: election.CandidateNames,
                        datasets: [{
                            label: 'Votes',
                            data: election.VoteCounts,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            tooltip: {
                                enabled: false,
                                external: function (context) {
                                    const tooltipModel = context.tooltip;
                                    const tooltipEl = document.getElementById('chartjs-tooltip');

                                    if (!tooltipEl) {
                                        const newTooltipEl = document.createElement('div');
                                        newTooltipEl.id = 'chartjs-tooltip';
                                        newTooltipEl.innerHTML = `
                                                    <div class="tooltip-content">
                                                        <img id="tooltip-img" src="" alt="Candidate Photo" />
                                                        <p id="tooltip-name"></p>
                                                        <p id="tooltip-votes"></p>
                                                    </div>`;
                                        document.body.appendChild(newTooltipEl);
                                    }

                                    const tooltip = document.getElementById('chartjs-tooltip');
                                    if (tooltipModel.opacity === 0) {
                                        tooltip.style.opacity = 0;
                                        return;
                                    }

                                    const index = tooltipModel.dataPoints[0].dataIndex;
                                    const candidateName = election.CandidateNames[index];
                                    const voteCount = election.VoteCounts[index];
                                    const candidatePhoto = imageUrls[index];

                                    document.getElementById('tooltip-img').src = candidatePhoto;
                                    document.getElementById('tooltip-name').innerText = candidateName;
                                    document.getElementById('tooltip-votes').innerText = `Votes: ${voteCount}`;

                                    tooltip.style.opacity = 1;
                                    tooltip.style.position = 'absolute';
                                    tooltip.style.left = context.chart.canvas.offsetLeft + tooltipModel.caretX + 'px';
                                    tooltip.style.top = context.chart.canvas.offsetTop + tooltipModel.caretY + 'px';
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
        });
    </script>
}

<style>
    #chartjs-tooltip {
        position: absolute;
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        pointer-events: none;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
    }

        #chartjs-tooltip img {
            width: 75px;
            height: 75px;
            border-radius: 50%;
            display: block;
            margin: 0 auto;
        }

        #chartjs-tooltip p {
            margin: 5px 0;
            text-align: center;
            font-size: 14px;
            color: #212529;
        }

    body {
        background-color: #f8f9fa;
        color: #212529;
    }

    /* Back Button Styling */
    .back-button {
        position: fixed;
        top: 20px;
        left: 20px;
        background-color: #0047ab; /* South African blue */
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease-in-out;
    }

        .back-button:hover {
            background-color: #003580; /* Darker blue */
            transform: scale(1.1);
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
        }


    .results-title {
        font-weight: bold;
        color: #0047ab; /* South African blue */
        text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);
    }

    .election-title {
        font-weight: bold;
        color: #28a745; /* South African green */
        margin-bottom: 20px;
    }

    .stats-container {
        background-color: #fffbea;
        border: 2px solid #ffb400; /* South African gold */
        border-radius: 10px;
        padding: 15px;
        margin: 20px 0;
        font-size: 1.1rem;
    }

    .table {
        margin-top: 20px;
        background-color: #ffffff;
    }

    .table-header {
        background-color: #0047ab; /* South African blue */
        color: white;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f8f5;
    }

    .table-bordered th,
    .table-bordered td {
        border: 2px solid #ddd;
    }

    .results-chart {
        margin: 20px auto;
        width: 1000px;
        border: 2px solid #28a745; /* South African green */
        border-radius: 10px;
        background-color: white;
    }
</style>